{"version":3,"sources":["../../../src/routes/controllers/userController.js"],"names":["fs","require","express","checkLogin","router","Router","User","UserGame","get","req","res","console","log","user","query","findById","id","select","userData","sum","where","userTotalMinutesPlayed","count","userTotalGamesPlayed","total_minutes_played","total_games_played","hours","Math","floor","minutes","total_time_played","files","readdirSync","randomImage","random","length","render","image","post","formData","body","patch","name","email","updateUser","redirect","module","exports"],"mappings":"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","sourcesContent":["const fs = require(\"fs\");\r\nconst express = require(\"express\");\r\nvar checkLogin = require(\"../../config/checkLoginMiddleware\");\r\n\r\nconst router = express.Router();\r\nvar checkLogin = require(\"../../config/checkLoginMiddleware.js\");\r\n\r\nconst User = require(\"../../../models/user\");\r\nconst UserGame = require(\"../../../models/userGame\");\r\n\r\n// middleware to check if logged in\r\nrouter.get(\"/user-profile\", checkLogin, async (req, res) => {\r\n  console.log(req.user);\r\n  const userData = await User.query()\r\n    .findById(req.user.id)\r\n    .select(\r\n      \"id\",\r\n      \"steam_persona_name\",\r\n      \"steam_profile\",\r\n      \"steam_id\",\r\n      \"steam_avatar\",\r\n      \"total_steam_games_owned\",\r\n      \"total_steam_games_played\",\r\n      \"name\",\r\n      \"email\"\r\n    );\r\n\r\n  const userTotalMinutesPlayed = await UserGame.query()\r\n    .sum(\"playtime_forever as total_minutes_played\")\r\n    .where(\"user_id\", \"=\", req.user.id);\r\n\r\n  const userTotalGamesPlayed = await UserGame.query()\r\n    .count(\"game_id as total_games_played\")\r\n    .where(\"user_id\", \"=\", req.user.id);\r\n\r\n  userData.total_minutes_played =\r\n    userTotalMinutesPlayed[0].total_minutes_played;\r\n  userData.total_games_played = userTotalGamesPlayed[0].total_games_played;\r\n\r\n  const hours = Math.floor(userData.total_minutes_played / 60);\r\n  const minutes = userData.total_minutes_played - hours * 60;\r\n  if (hours === 0) {\r\n    userData.total_time_played = `${minutes} minutes`;\r\n  } else {\r\n    userData.total_time_played = `${hours} hours and ${minutes} minutes`;\r\n  }\r\n\r\n  const files = fs.readdirSync(\"public/images/hero/user-profile\");\r\n  const randomImage = files[Math.floor(Math.random() * files.length)];\r\n\r\n  res.render(\"user-profile\", {\r\n    user: userData,\r\n    image: randomImage,\r\n  });\r\n});\r\n\r\nrouter.post(\"/update-user-profile\", async (req, res) => {\r\n  const formData = req.body;\r\n\r\n  const updateUser = await User.query().findById(req.user.id).patch({\r\n    name: formData.name,\r\n    email: formData.email,\r\n  });\r\n\r\n  req.user.name = formData.name;\r\n  req.user.email = formData.email;\r\n\r\n  res.redirect(\"/user-profile\");\r\n});\r\n// export routes up to routes.js\r\nmodule.exports = router;\r\n"],"file":"userController.js"}