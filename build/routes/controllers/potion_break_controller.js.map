{"version":3,"sources":["../../../src/routes/controllers/potion_break_controller.js"],"names":["fs","require","format","differenceInCalendarDays","fromUnixTime","formatISO","express","checkLogin","router","Router","Game","Charity","PotionBreak","UserGame","get","req","res","appId","params","appid","query","findById","game","charities","files","readdirSync","randomImage","Math","floor","random","length","render","user","image","select","from","where","id","join","orderBy","potionBreakData","potionBreak","playtime_start_hours","playtime_start","formatted_start_date","start_date","representation","formatted_end_date","end_date","playtime_start_minutes","start","Date","end","today","daysLeft","totalDays","progressPercentage","toFixed","status","progress_colour","days_left","total_days","progress_percentage","console","error","post","body","formattedStartDate","dateCreated","formattedDate","charityName","charityId","playtimeForever","insert","endDate","user_id","game_id","total_value","paymentAmount","charity_id","setup_intent_id","setupIntentId","playtime_forever","stripe_payment_date_created","insertPotionBreak","patch","potion_break_active","updatePotionBreakStatus","redirect","max","maxPotionBreakId","then","data","module","exports"],"mappings":"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","sourcesContent":["const fs = require(\"fs\");\r\nconst format = require(\"date-fns/format\");\r\nconst differenceInCalendarDays = require(\"date-fns/differenceInCalendarDays\");\r\nconst fromUnixTime = require(\"date-fns/fromUnixTime\");\r\nconst formatISO = require(\"date-fns/formatISO\");\r\n\r\nconst express = require(\"express\");\r\nconst checkLogin = require(\"../../config/checkLoginMiddleware\");\r\n\r\nconst router = express.Router();\r\n\r\nconst Game = require(\"../../../models/game\");\r\nconst Charity = require(\"../../../models/charity\");\r\nconst PotionBreak = require(\"../../../models/potionBreak\");\r\nconst UserGame = require(\"../../../models/userGame\");\r\n\r\n// TODO: ADD MANDATE PAGE - https://stripe.com/docs/payments/setup-intents#mandates (more information)\r\n\r\nrouter.get(\"/potion-break/create/:appid\", checkLogin, async (req, res) => {\r\n  const appId = req.params.appid;\r\n\r\n  const game = await Game.query().findById(appId);\r\n  const charities = await Charity.query();\r\n\r\n  const files = fs.readdirSync(\"public/images/hero/create-potion-break\");\r\n  const randomImage = files[Math.floor(Math.random() * files.length)];\r\n\r\n  res.render(\"create-potion-break\", {\r\n    user: req.user,\r\n    game,\r\n    charities,\r\n    image: randomImage,\r\n  });\r\n});\r\n\r\nrouter.get(\"/potion-breaks/view/all\", checkLogin, async (req, res) => {\r\n  try {\r\n    const potionBreakData = await PotionBreak.query()\r\n      .select(\r\n        \"potion_breaks.id\",\r\n        \"potion_breaks.start_date\",\r\n        \"potion_breaks.end_date\",\r\n        \"potion_breaks.user_id\",\r\n        \"potion_breaks.game_id\",\r\n        \"potion_breaks.charity_id\",\r\n        \"potion_breaks.total_value\",\r\n        \"potion_breaks.status\",\r\n        \"potion_breaks.playtime_start\"\r\n      )\r\n      .from(\"potion_breaks\")\r\n      .where(\"potion_breaks.user_id\", \"=\", req.user.id)\r\n      .join(\"games\", \"potion_breaks.game_id\", \"games.id\")\r\n      .select(\r\n        \"games.name AS game_name\",\r\n        \"games.img_icon AS game_img_icon_url\",\r\n        \"games.img_logo AS game_img_logo_url\"\r\n      )\r\n      .join(\"charities\", \"potion_breaks.charity_id\", \"charities.id\")\r\n      .select(\r\n        \"charities.name AS charity_name\",\r\n        \"charities.description AS charity_description\",\r\n        \"charities.img_path AS charity_img_path\"\r\n      )\r\n      .orderBy(\"potion_breaks.start_date\");\r\n\r\n    for (const potionBreak of potionBreakData) {\r\n      potionBreak.playtime_start_hours = Math.floor(\r\n        potionBreak.playtime_start / 60\r\n      );\r\n      potionBreak.formatted_start_date = formatISO(potionBreak.start_date, {\r\n        representation: \"date\",\r\n      });\r\n      potionBreak.formatted_end_date = formatISO(potionBreak.end_date, {\r\n        representation: \"date\",\r\n      });\r\n      potionBreak.playtime_start_minutes = potionBreak.playtime_start % 60;\r\n      const start = new Date(potionBreak.start_date);\r\n      const end = new Date(potionBreak.end_date);\r\n      const today = new Date();\r\n      const daysLeft = differenceInCalendarDays(end, today);\r\n      const totalDays = differenceInCalendarDays(end, start);\r\n      let progressPercentage = (\r\n        ((totalDays - daysLeft) / totalDays) *\r\n        100\r\n      ).toFixed(2);\r\n      // set progress bar fill percentage\r\n      if (\r\n        progressPercentage < 0 ||\r\n        progressPercentage > 100 ||\r\n        daysLeft === 0\r\n      ) {\r\n        progressPercentage = 100;\r\n      }\r\n      if (totalDays === 0) {\r\n        progressPercentage = 0;\r\n      }\r\n      // set progress bar colour\r\n      if (potionBreak.status === \"Ongoing\") {\r\n        potionBreak.progress_colour = \"is-link\";\r\n      } else if (potionBreak.status === \"Failure\") {\r\n        potionBreak.progress_colour = \"is-danger\";\r\n      } else if (potionBreak.status === \"Success\") {\r\n        potionBreak.progress_colour = \"is-success\";\r\n      }\r\n      potionBreak.days_left = daysLeft;\r\n      potionBreak.total_days = totalDays;\r\n      potionBreak.progress_percentage = progressPercentage;\r\n    }\r\n\r\n    const files = fs.readdirSync(\"public/images/hero/view-all-potion-breaks\");\r\n    const randomImage = files[Math.floor(Math.random() * files.length)];\r\n\r\n    res.render(\"view-all-potion-breaks\", {\r\n      potionBreakData,\r\n      image: randomImage,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n});\r\n\r\nrouter.post(\"/potion-break-creation-success\", async (req, res) => {\r\n  try {\r\n    const potionBreakData = req.body;\r\n\r\n    // conversion from UNIX timestamp to YYYY-MM-DD\r\n    const formattedStartDate = format(\r\n      fromUnixTime(potionBreakData.dateCreated),\r\n      \"yyyy-MM-dd\"\r\n    );\r\n\r\n    potionBreakData.formattedDate = formattedStartDate;\r\n\r\n    const charityId = await Charity.query()\r\n      .select(\"id\")\r\n      .where(\"name\", \"=\", potionBreakData.charityName);\r\n\r\n    const playtimeForever = await UserGame.query()\r\n      .select(\"playtime_forever\")\r\n      .where(\"game_id\", \"=\", potionBreakData.appId)\r\n      .where(\"user_id\", \"=\", req.user.id);\r\n\r\n    const insertPotionBreak = await PotionBreak.query().insert({\r\n      start_date: potionBreakData.formattedDate,\r\n      end_date: potionBreakData.endDate,\r\n      user_id: req.user.id,\r\n      game_id: potionBreakData.appId,\r\n      total_value: potionBreakData.paymentAmount,\r\n      charity_id: charityId[0].id,\r\n      setup_intent_id: potionBreakData.setupIntentId,\r\n      status: \"Ongoing\",\r\n      playtime_start: playtimeForever[0].playtime_forever,\r\n      stripe_payment_date_created: potionBreakData.dateCreated,\r\n    });\r\n\r\n    const updatePotionBreakStatus = await UserGame.query()\r\n      .where(\"game_id\", \"=\", potionBreakData.appId)\r\n      .where(\"user_id\", \"=\", req.user.id)\r\n      .patch({\r\n        potion_break_active: \"true\",\r\n      });\r\n\r\n    res.redirect(`potion-break/create/${potionBreakData.appId}/success`);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n});\r\n\r\nrouter.get(\r\n  \"/potion-break/create/:appid/success\",\r\n  checkLogin,\r\n  async (req, res) => {\r\n    try {\r\n      const maxPotionBreakId = await PotionBreak.query()\r\n        .max(\"id\")\r\n        .where(\"user_id\", \"=\", req.user.id);\r\n\r\n      const potionBreakData = await PotionBreak.query()\r\n        .select(\r\n          \"potion_breaks.id\",\r\n          \"potion_breaks.start_date\",\r\n          \"potion_breaks.end_date\",\r\n          \"potion_breaks.user_id\",\r\n          \"potion_breaks.game_id\",\r\n          \"potion_breaks.charity_id\",\r\n          \"potion_breaks.total_value\",\r\n          \"potion_breaks.status\",\r\n          \"potion_breaks.playtime_start\"\r\n        )\r\n        .from(\"potion_breaks\")\r\n        .where(\"potion_breaks.id\", \"=\", maxPotionBreakId[0].max)\r\n        .join(\"games\", \"potion_breaks.game_id\", \"games.id\")\r\n        .select(\r\n          \"games.name AS game_name\",\r\n          \"games.img_icon AS game_img_icon_url\",\r\n          \"games.img_logo AS game_img_logo_url\"\r\n        )\r\n        .join(\"charities\", \"potion_breaks.charity_id\", \"charities.id\")\r\n        .select(\r\n          \"charities.name AS charity_name\",\r\n          \"charities.description AS charity_description\",\r\n          \"charities.img_path AS charity_img_path\"\r\n        )\r\n        .then((data) => {\r\n          return data[0];\r\n        });\r\n\r\n      // convert unix time to this format - Thursday, July 23rd 2020\r\n      potionBreakData.formatted_start_date = format(\r\n        potionBreakData.start_date,\r\n        \"EEEE, MMMM do yyyy\"\r\n      );\r\n      potionBreakData.formatted_end_date = format(\r\n        potionBreakData.end_date,\r\n        \"EEEE, MMMM do yyyy\"\r\n      );\r\n      // calculate duration of potion break\r\n      const start = new Date(potionBreakData.start_date);\r\n      const end = new Date(potionBreakData.end_date);\r\n      potionBreakData.total_days = differenceInCalendarDays(end, start);\r\n      // convert total time played from minutes to hours:minutes\r\n      potionBreakData.playtime_start_hours = Math.floor(\r\n        potionBreakData.playtime_start / 60\r\n      );\r\n      potionBreakData.playtime_start_minutes =\r\n        potionBreakData.playtime_start % 60;\r\n\r\n      const files = fs.readdirSync(\"public/images/hero/potion-break-success\");\r\n      const randomImage = files[Math.floor(Math.random() * files.length)];\r\n\r\n      res.render(\"potion-break-create-success\", {\r\n        user: req.user,\r\n        potionBreakData,\r\n        image: randomImage,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n);\r\n\r\n// export routes up to routes.js\r\nmodule.exports = router;\r\n"],"file":"potion_break_controller.js"}