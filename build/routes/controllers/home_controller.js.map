{"version":3,"sources":["../../../src/routes/controllers/home_controller.js"],"names":["express","require","router","Router","checkLogin","Game","Charity","get","req","res","user","redirect","query","findById","withGraphFetched","dota","halflife","divinity","findByIds","charities","render","dotaData","halflifeData","divinityData","charityData","console","error","message","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,IAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,IAAMC,UAAU,GAAGH,OAAO,CAAC,sCAAD,CAA1B;;AAEA,IAAMI,IAAI,GAAGJ,OAAO,CAAC,sBAAD,CAApB;;AACA,IAAMK,OAAO,GAAGL,OAAO,CAAC,yBAAD,CAAvB,C,CAEA;;;AACAC,MAAM,CAACK,GAAP,CAAW,GAAX;AAAA,2FAAgB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,iBAERD,GAAG,CAACE,IAFI;AAAA;AAAA;AAAA;;AAGVD,YAAAA,GAAG,CAACE,QAAJ,CAAa,eAAb;AAHU;AAAA;;AAAA;AAAA;AAAA,mBAKSN,IAAI,CAACO,KAAL,GAChBC,QADgB,CACP,GADO,EAEhBC,gBAFgB,CAEC,aAFD,EAGhBA,gBAHgB,CAGC,QAHD,CALT;;AAAA;AAKJC,YAAAA,IALI;AAAA;AAAA,mBAUaV,IAAI,CAACO,KAAL,GACpBC,QADoB,CACX,MADW,EAEpBC,gBAFoB,CAEH,aAFG,EAGpBA,gBAHoB,CAGH,QAHG,CAVb;;AAAA;AAUJE,YAAAA,QAVI;AAAA;AAAA,mBAeaX,IAAI,CAACO,KAAL,GACpBC,QADoB,CACX,MADW,EAEpBC,gBAFoB,CAEH,aAFG,EAGpBA,gBAHoB,CAGH,QAHG,CAfb;;AAAA;AAeJG,YAAAA,QAfI;AAAA;AAAA,mBAoBcX,OAAO,CAACM,KAAR,GAAgBM,SAAhB,CAA0B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA1B,CApBd;;AAAA;AAoBJC,YAAAA,SApBI;AAsBVV,YAAAA,GAAG,CAACW,MAAJ,CAAW,MAAX,EAAmB;AACjBC,cAAAA,QAAQ,EAAEN,IADO;AAEjBO,cAAAA,YAAY,EAAEN,QAFG;AAGjBO,cAAAA,YAAY,EAAEN,QAHG;AAIjBO,cAAAA,WAAW,EAAEL;AAJI,aAAnB;;AAtBU;AAAA;AAAA;;AAAA;AAAA;AAAA;AA8BZM,YAAAA,OAAO,CAACC,KAAR,CAAc,YAAIC,OAAlB;;AA9BY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA;AAkCAzB,MAAM,CAACK,GAAP,CAAW,QAAX,EAAqBH,UAArB,EAAiC,UAAUI,GAAV,EAAeC,GAAf,EAAoB;AACnDA,EAAAA,GAAG,CAACW,MAAJ,CAAW,OAAX;AACD,CAFD,E,CAIA;;AACAQ,MAAM,CAACC,OAAP,GAAiB3B,MAAjB","sourcesContent":["const express = require(\"express\");\r\n\r\nconst router = express.Router();\r\nconst checkLogin = require(\"../../config/checkLoginMiddleware.js\");\r\n\r\nconst Game = require(\"../../../models/game\");\r\nconst Charity = require(\"../../../models/charity\");\r\n\r\n// middleware to check if logged in\r\nrouter.get(\"/\", async (req, res) => {\r\n  try {\r\n    if (req.user) {\r\n      res.redirect(\"/game-library\");\r\n    } else {\r\n      const dota = await Game.query()\r\n        .findById(570)\r\n        .withGraphFetched(\"screenshots\")\r\n        .withGraphFetched(\"movies\");\r\n\r\n      const halflife = await Game.query()\r\n        .findById(546560)\r\n        .withGraphFetched(\"screenshots\")\r\n        .withGraphFetched(\"movies\");\r\n\r\n      const divinity = await Game.query()\r\n        .findById(435150)\r\n        .withGraphFetched(\"screenshots\")\r\n        .withGraphFetched(\"movies\");\r\n\r\n      const charities = await Charity.query().findByIds([1, 2, 5]);\r\n\r\n      res.render(\"home\", {\r\n        dotaData: dota,\r\n        halflifeData: halflife,\r\n        divinityData: divinity,\r\n        charityData: charities,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.error(err.message);\r\n  }\r\n});\r\n\r\nrouter.get(\"/login\", checkLogin, function (req, res) {\r\n  res.render(\"login\");\r\n});\r\n\r\n// export routes up to routes.js\r\nmodule.exports = router;\r\n"],"file":"home_controller.js"}