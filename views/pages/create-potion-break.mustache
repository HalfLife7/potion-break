{{>header}}
<html>

<body>
    <section class="hero is-dark is-small">
        <div class="hero-body">
            <nav class="level is-dark">
                <div class="level-item has-text-centered">
                    <div>
                        <figure class="image is-128x128">
                            <img src="{{user.steam_avatar}}" alt="Placeholder image">
                        </figure>
                        <p class="title">{{user.steam_persona_name}}</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">Games Owned</p>
                        <p class="title">{{user.totalGamesOwned}}</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">Games Played</p>
                        <p class="title">{{user.totalGamesPlayed}}</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">Time Played</p>
                        <p class="title">{{user.totalTimePlayed}}</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">Game</p>
                        <p class="title">{{game.name}}</p>
                    </div>
                </div>
            </nav>
        </div>
    </section>
    <section>
        <form id="potion-break-form" method="POST" action="/submit-potion-break">
            <input type="hidden" id="appId" name="appId" value="{{game.app_id}}">
            <div class="field">
                <label class="label" for="name">Name</label>
                <div class="control">
                    <input class="input" type="text" placeholder="John Smith" name="name">
                </div>
            </div>
            <div class="field">
                <label class="label" for="email">Email</label>
                <div class="control">
                    <input class="input" type="text" placeholder="john@example.com" name="email">
                </div>
            </div>
            <div class="field">
                <label class="label" for="amount">Amount</label>
                <div class="control">
                    <input class="input" type="number" placeholder="10, 20, 100, etc." name="amount">
                </div>
            </div>
            <div class="field" name="charity">
                <label class="label" for="charity">Charity</label>
                <div class="control">
                    <div class="select">
                        <select name="charity">
                            <option>NPR</option>
                            <option>Samaritan's Purse</option>
                            <option>Metropolitan Museum of Art</option>
                            <option>Doctors Without Borders</option>
                            <option>PBS</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="field">
                <label class="label" for="endDate">End Date</label>
                <input type="date" name="endDate">
            </div>
            <div class="field is-grouped">
                <div class="control">
                    <button type="submit" id="potion-break-form-submit" class="button is-link">Add Payment
                        Information</button>
                </div>
                <div class="control">
                    <button type="reset" class="button is-link is-light">Reset</button>
                </div>
            </div>
        </form>

    </section>
    {{>footer}}
    <script>
        // bulma.io datepicker setup
        var d = new Date();
        d.setDate(d.getDate() + 7);

        var options = {
            type: "date",
            color: "is-dark",
            showTodayButton: "false",
            maxDate: d
        }
        // Initialize all input of type date
        var calendars = bulmaCalendar.attach('[type="date"]', options);

        // Loop on each calendar initialized
        for (var i = 0; i < calendars.length; i++) { // Add listener to date:selected event calendars[i].on('select',
            date => {
                console.log(date);
            }
        }

        // To access to bulmaCalendar instance of an element
        var element = document.querySelector('#my-element');
        if (element) {
            // bulmaCalendar instance is available as element.bulmaCalendar
            element.bulmaCalendar.on('select', function (datepicker) {
                console.log(datepicker.data.value());
            });
        }
    </script>
</body>